# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        if not root:
            return 0
        left_depth = self.maxDepth(root.left)
        right_depth = self.maxDepth(root.right)
        return 1 + max(left_depth, right_depth)
#Imagine you're standing at the root of a tree, and you want to figure out how deep it goes — like how many steps it takes to reach the farthest leaf.
#You’re trying to find the longest path from the root to any leaf.

#Try reading it like a conversation:
“Hey left child, how deep are you?”
#“1”
#“Hey right child, how deep are you?”
#“2”
#“Cool. I’m node 3. So my depth is 1 + max(1, 2) = 3.”
