from typing import List

class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        if not grid or not grid[0]:
            return 0
        
        m, n = len(grid), len(grid[0])

        # Update the first row (can only come from the left)
        for j in range(1, n):
            grid[0][j] += grid[0][j - 1]

        # Update the first column (can only come from above)
        for i in range(1, m):
            grid[i][0] += grid[i - 1][0]

        # Update the rest of the grid
        for i in range(1, m):
            for j in range(1, n):
                grid[i][j] += min(grid[i - 1][j], grid[i][j - 1])

        return grid[-1][-1]  # Bottom-right cell contains the result
